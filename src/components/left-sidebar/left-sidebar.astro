---
import manifest from '../../config/manifest.json'
import ThemeToggleButton from '@components/theme-toggle-button'
---

<nav>
  <ul class="nav-groups">
    {
      manifest.routes.map(({ title, routes, path, icon }) => {
        if (path) {
          return (
            <li class="nav-group">
            <div class="nav-group-title">
              <a class="flex items-center gap-2" href={path}>
                <img
                  width="25"
                  height="25"
                  src={`/icons${icon.replace('.svg', '-light.svg')}`}
                />
                {title}
              </a>
            </div>
            </li>
          )
        }
        return (
          <li class="nav-group">
          <details open>
            <summary class="nav-group-title">
              <h2>
                <img
                  width="25"
                  height="25"
                  src={`/icons${icon.replace('.svg', '-light.svg')}`}
                />
                <span>{title}</span>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 1 16 16"
                  width="16"
                  height="16"
                  aria-hidden="true"
                >
                  <path
                    fill-rule="evenodd"
                    d="M6.22 3.22a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06L9.94 8 6.22 4.28a.75.75 0 010-1.06z"
                  />
                </svg>
              </h2>
            </summary>
            <ul>
              {routes.map(({ title, path }) => {
                return (
                  <li class="nav-link">
                    <a href={path}>{title}</a>
                  </li>
                )
              })}
            </ul>
          </details>
          </li>
        )
      })
    }
    <li style="text-align: center;">
      <ThemeToggleButton client:visible />
    </li>
  </ul>
</nav>

<style>
  nav {
    width: 100%;
    height: 100%;
    font-size: var(--theme-text-sm);
  }

  .nav-groups {
    padding-top: 1rem;
    max-height: 100%;
    overflow-x: visible;
    overflow-y: auto;
  }

  @media (min-width: 50em) {
    .nav-groups {
      position: fixed;
      top: 4rem;
      bottom: 0;
      width: calc(
        var(--theme-left-sidebar-width) - var(--min-spacing-inline) * 1.6
      );
    }
  }

  .nav-group {
    margin-bottom: 1rem;
  }


  details > summary {
    list-style: none;
  }

  summary h2 {
    display: flex;
    align-items: center;
    font-size: 0.875rem;
    gap: 0.5rem;
    font-weight: 700;
  }


  .nav-group-title {
    font-size: 1rem;
    font-weight: 600;
    padding: 0.3rem 2rem;
    display: flex;
    gap: 0.5rem;
  }

  .nav-link a {
    margin: 1px;
    padding: 0.3rem 2.5rem;
    color: var(--theme-text-lighter);
    text-decoration: none;
    display: block;
    font: inherit;
  }

	@media (min-width: 50em) {
		.nav-group-title {

			padding: 0.2rem 1rem;
    }

    .nav-link a {
			padding: 0.2rem 1.5rem;
    }
	}

  .nav-link a:hover,
  .nav-link a:focus {
    background-color: var(--theme-bg-hover);
  }
  details > summary {
    list-style: none;
  }
  details > summary::marker,
  details > summary::-webkit-details-marker {
    display: none;
  }

  details[open] > summary svg {
    transform: rotate(90deg);
  }

  summary {
    cursor: pointer;
  }

  summary h2 {
    all: inherit;
    font-size: 1rem;
    margin: 0;
    padding: 0;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  svg {
    transform: rotate(0deg);
    transition: 0.15s transform ease;
  }

  svg path {
    fill: currentColor;
  }
</style>
