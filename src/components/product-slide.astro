---
export interface Props {
  images: string[]
}

const { images } = Astro.props
---
<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.css"
/>
<div class="flex">
  <div class="hidden md:flex justify-center w-[20%]">
    <div class="swiper thumb-swiper">
      <div class="swiper-wrapper">
        {
          images.map((url: string) => {
            if (!url) return
            return (
              <div class="swiper-slide">
                <img src={url} alt={'Thumbs swiper producto seguridad'} width="75" height="auto" />
              </div>
            )
          })
        }
      </div>
    </div>
  </div>
  <div class="swiper main-swiper w-full md:w-[80%]">
    <div class="swiper-wrapper">
      {
        images.map((url: string) => {
          if(!url) return
          return (
            <div class="swiper-slide">
              <img src={url} width="350" alt={'Slider producto segurida'} />
            </div>
          )
        })
      }
    </div>
    <div class="swiper-pagination"></div>
    <div class="swiper-button-prev"></div>
    <div class="swiper-button-next"></div>
  </div>
</div>


<script type="module">
  import Swiper from 'https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.esm.browser.min.js'

  const thumbSwiper = new Swiper('.thumb-swiper', {
    // Optional parameters
    slidesPerView: 4,
    spaceBetween: 10,
    direction: 'vertical',
    freeMode: true,
    watchSlidesProgress: true
  })

  const swiper = new Swiper('.main-swiper', {
    // Optional parameters
    thumbs: {
      swiper: thumbSwiper
    },
    slidesPerView: 1,
    direction: 'horizontal',
    loop: true,

    // If we need pagination
    pagination: {
      el: '.swiper-pagination'
    },

    // Navigation arrows
    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev'
    }
  })
</script>
<style>
  .main-swiper {
    height: 354px;
  }


  .main-swiper .swiper-slide {
    display: flex;
    justify-content: center;
    align-items: center;
  }


  .main-swiper .swiper-slide img {
    height: 354px;
    width: 354px;
    object-fit: contain;
  }


  .thumb-swiper {
    height: 354px;
  }

  .thumb-swiper .swiper-slide {
    display: flex;
    align-items: center;
    width: 75px;
    height: 75px !important;
    border: 2px solid var(--theme-text);
  }

  .thumb-swiper .swiper-slide:first-child {
    padding: 0.1rem;
  }

  .thumb-swiper .swiper-slide:first-child img {
    object-fit: contain;
  }

  .thumb-swiper .swiper-slide img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .thumb-swiper .swiper-slide-thumb-active {
    border-color: orange !important;
  }

  .swiper-button-prev,
  .swiper-button-next {
    --swiper-theme-color: var(--colors-accents7);
    --swiper-navigation-size: 20px;
    border: 1px solid var(--theme-text);
    background: var(--theme-bg);
    width: 50px !important;
    height: 50px !important;
    border-radius: 100%;
  }
</style>
