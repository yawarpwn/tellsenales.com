---
import Button from '@components/button/btn.astro'
export interface Props {
    titleColor: 'yellow' | 'warning' | 'cyan' | 'green' | 'blue' | 'violet'
    img1: string
    img2: string
    img3: string
    reverse?: boolean
    subtitle: string
    title: string
    href?: string
}

const { title, subtitle, titleColor, img1, img2, img3, href, reverse } =
    Astro.props
---

<section
    class={['hero-section', reverse && 'hero-section--reverse']
        .filter(Boolean)
        .join(' ')}
>
    <div class="absolute">
        {
            reverse ? (
                <img
                    class="h-full w-full object-cover"
                    src="/assets/images/dark-mode-gradient.svg"
                    alt="fondo degradado para reverse"
                />
            ) : (
                <img
                    class="h-full w-full object-cover"
                    src="/assets/images/stitches-gradient.svg"
                    alt="fondo degradado para no reverse"
                />
            )
        }
    </div>
    <div class="max-w-7xl mx-auto px-4 xl:px-0">
        <div
            class={`grid-container ${
                reverse ? 'reverse-true' : 'reverse-false'
            }`}
        >
            <!-- first child -->
            <div
                class={`flex items-center  ${
                    reverse ? 'order-1 md:order-2' : 'order-1 md:order-2'
                }`}
            >
                <div class="md:space-y-8 z-10">
                    <h2
                        class={`text-3xl  md:text-5xl font-extrabold  ${titleColor}`}
                    >
                        {title}
                    </h2>
                    <p class="text-xl">{subtitle}</p>
                    {
                        href && (
                            <Button class={`mt-4 `} color="outline" href={href}>
                                M치s info
                            </Button>
                        )
                    }
                </div>
            </div>

            <!-- second child -->
            <div
                class={`grid-child ${
                    reverse ? 'order-2 md:order-1' : 'order-1 md:order-2'
                } `}
            >
                <div class="images-container">
                    <div class="grid-lines z-10">
                        <div class="right-1/4 vertical"></div>
                        <div class="right-1/2 vertical"></div>
                        <div class="right-3/4 vertical"></div>
                        <div class="top-1/2 horizontal"></div>
                        <div class="right-0 vertical"></div>
                        <div class="bottom-0 horizontal"></div>
                        <div class="left-0 vertical"></div>
                        <div class="top-0 horizontal"></div>
                        <div class="-right-[25%] vertical outer"></div>
                        <div class="-left-[25%] vertical outer"></div>
                    </div>
                    <div class="img-container first">
                        <img
                            src={img1}
                            alt={`Se침ales ${title} 1`}
                            width="400"
                            height="373"
                        />
                    </div>
                    <div class="img-container second">
                        <img
                            src={img2}
                            alt={`Se침ales ${title} 2`}
                            width="400"
                            height="373"
                        />
                    </div>
                    <div class="img-container third">
                        <img
                            src={img3}
                            alt={`Se침ales ${title} 3`}
                            width="400"
                            height="373"
                        />
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<style>
    .grid-lines > div {
        @apply absolute from-indigo-100/0 via-indigo-500/50 to-indigo-100/0;
    }
    .grid-lines > .vertical {
        @apply -top-1/2 h-[200%] w-px bg-gradient-to-b;
    }
    .grid-lines > .horizontal {
        @apply -left-1/2 h-px w-[200%] bg-gradient-to-r;
    }
    .grid-lines > .outer {
        @apply via-indigo-500/20;
    }

    .hero-section {
        @apply relative flex min-h-screen items-center overflow-hidden;
    }
    .hero-section--reverse {
        /* background: var(--theme-bg-gradient); */
        background: linear-gradient(
            270deg,
            var(--theme-bg-gradient-top),
            var(--theme-bg-gradient-bottom)
        );
    }
    .yellow {
        background: linear-gradient(180deg, #ffc420 25%, #f69f00 100%);
        -webkit-text-fill-color: transparent;
        -webkit-background-clip: text;
    }

    .warning {
        background: linear-gradient(180deg, #f36534 25%, #f69f27 100%);
        -webkit-text-fill-color: transparent;
        -webkit-background-clip: text;
    }

    /* textGradient: "180deg, #6FEE8D 25%, #17c964 100%", */
    .green {
        background: linear-gradient(180deg, #6fee8d 25%, #17c864 100%);
        -webkit-text-fill-color: transparent;
        -webkit-background-clip: text;
    }

    .blue {
        background: linear-gradient(180deg, #5ea2ef 25%, #0072f5 100%);
        -webkit-text-fill-color: transparent;
        -webkit-background-clip: text;
    }

    .cyan {
        background: linear-gradient(180deg, #00b7fa 25%, #01cfea 100%);
        -webkit-text-fill-color: transparent;
        -webkit-background-clip: text;
    }

    .violet {
        background: linear-gradient(180deg, #ff1cf7 25%, #b249f8 100%);
        -webkit-text-fill-color: transparent;
        -webkit-background-clip: text;
    }
    .grid-container {
        display: grid;
        grid-template-columns: 1fr;
        gap: 5rem;
    }

    .images-container {
        height: 220px;
        position: relative;
    }

    .img-container {
        border: 3px solid #fff;
        box-shadow: 0 5px 20px -5px rgba(2, 1, 1, 0.2);
        position: absolute;
    }

    .images-container img {
        width: auto;
        height: 190px;
    }

    .first {
        rotate: -15deg;
        left: 0;
        top: 0;
    }

    .second {
        rotate: -5deg;
        z-index: 3;
        left: 120px;
        top: 0px;
    }

    .third {
        rotate: -5deg;
        left: 250px;
        top: 0;
    }

    @media (min-width: 960px) {
        .grid-container {
            gap: 2rem;
        }

        .reverse-false {
            grid-template-columns: 1fr 2fr;
        }

        .reverse-true {
            grid-template-columns: 2fr 1fr;
        }

        .images-container {
            height: 350px;
            position: relative;
        }

        .img-container img {
            height: auto;
            width: 350px;
        }

        .first {
            left: 20px;
            top: 0;
            rotate: -15deg;
        }

        .second {
            left: 300px;
            top: 0;
            rotate: -10deg;
            z-index: 3;
        }

        .third {
            left: 550px;
            top: 0;
            rotate: -5deg;
            display: block;
        }
    }
</style>
