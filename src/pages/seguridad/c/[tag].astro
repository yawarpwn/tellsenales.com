---
import { getAllProducts } from '../../../lib/contentful-request'
import ProductCard from '@components/product-card.astro'
import MainLayout from '@layouts/main-layout.astro'
import PageNavigation from '@components/page-navigation/page-navigation.astro'
import PageHeader from '@components/page-header/page-header.astro'
import manifest from '../../../config/manifest.json'
import slugify from 'slugify'
import type { Product } from '@types'

export async function getStaticPaths() {
	const allProducts: Product[] = await getAllProducts()
	const allTags = [
		...new Set(allProducts.map((product) => product.contentfulMetadata.tags[0]?.name)),
	]

	return allTags.map((tag) => ({
		params: { tag },
		props: {
			products: allProducts.filter((product) => product.contentfulMetadata.tags[0]?.name === tag),
		},
	}))
}

export interface Props {
	products: Product[]
}

const { products } = Astro.props
const titleFromData = products[0].contentfulMetadata.tags[0]?.name
const title = titleFromData.replace(/[-]/g, ' ').toUpperCase()
const content = {
	title,
	description: `Venta y distribuci√≥n de implementos de seguridad ${title}`,
	image: `/assets/images/${slugify(title, { lower: true })}.webp`,
}
---

<MainLayout {content}>
	<PageHeader title={title} />
	<PageNavigation navigation={manifest.routes[1].routes} />

	<!-- Product List -->
	<div class="grid grid-cols-2 md:grid-cols-4 px-4 md:px-0 gap-2">
		{
			products
				.sort((a, b) => (a.name > b.name ? 1 : -1))
				.map((product) => <ProductCard product={product} />)
		}
	</div>
</MainLayout>
